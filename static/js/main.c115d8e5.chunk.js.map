{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","React","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggleMode","role","htmlFor","TextForm","text","setText","useState","Fragment","style","color","heading","value","onChange","event","target","backgroundColor","rows","handleUpClick","newText","toUpperCase","showAlert","handleloClick","toLowerCase","handleClearClick","split","length","defaultPropes","aboutText","Alert","alert","word","lower","charAt","slice","capitalize","msg","App","setMode","setAlert","message","setTimeout","document","body","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.c115d8e5.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// import { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"#\">\r\n          {props.title}\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">\r\n                Home\r\n              </Link> */}\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\r\n                Home\r\n              </a>\r\n            </li>\r\n            {/* <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/about\">\r\n                {props.aboutText}\r\n              </Link>\r\n            </li> */}\r\n          </ul>\r\n          {/* <form className=\"d-flex\" role=\"search\">\r\n            <input\r\n              className=\"form-control me-2\"\r\n              type=\"search\"\r\n              placeholder=\"Search\"\r\n              aria-label=\"Search\"\r\n            />\r\n            <button className=\"btn btn-primary\" type=\"submit\">\r\n              Search\r\n            </button>\r\n          </form> */}\r\n          <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n              <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n              <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable DarkMode</label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nNavbar.propTypes = { title: PropTypes.string.isRequired, \r\n                     aboutText: PropTypes.string };\r\n\r\nNavbar.defaultPropes = {\r\n  title: 'Set title here',\r\n  aboutText: 'About text here'\r\n};\r\n","import React, {useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n  const handleUpClick = ()=> {\r\n    // console.log(\"Uppercase was clicked; \" + text);\r\n    let newText = text.toUpperCase();\r\n    setText(newText)\r\n    props.showAlert(\"Converted to Uppercase!\", \"success\");\r\n  }\r\n  const handleloClick = ()=> {\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to Lowercase!\", \"success\");\r\n  }\r\n  const handleClearClick = ()=> {\r\n    let newText = '';\r\n    setText(newText);\r\n    props.showAlert(\"Text Cleared!\", \"success\");\r\n  }\r\n\r\n  const handleOnChange = (event)=> {\r\n    // console.log(\"On change\");\r\n    setText(event.target.value);\r\n  }\r\n  \r\n  const [text, setText] = useState('Enter text here2');\r\n  // setText(\"new text\");\r\n  return (\r\n    <>\r\n    <div className=\"container\" style={{color: props.mode==='dark'?'white':'#042743'}}>\r\n      <h1>{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n        <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor: props.mode==='dark'?'grey':'white',color: props.mode==='dark'?'white':'#042743'}} id=\"myBox\" rows=\"5\"></textarea>\r\n        </div>\r\n        <button className=\"btn btn-primary mx-1\" onClick={handleUpClick}>Convert to Uppercase</button>\r\n        <button className=\"btn btn-primary mx-1\" onClick={handleloClick}>Convert to Lowercase</button>\r\n        <button className=\"btn btn-primary mx-1\" onClick={handleClearClick}>Clear Text</button>\r\n    </div>\r\n    <div className=\"container my-3\"  style={{color: props.mode==='dark'?'white':'#042743'}}>\r\n      <h2>Your text summary</h2>\r\n      <p>{text.split(\" \").length} words and {text.length} characters</p>\r\n      <p>{0.008 * text.split(\" \").length} Minutes read</p>\r\n      <h3>Preview</h3>\r\n      <p>{text.length>0?text:\"Enter something in the textbox above to preview it here\"}</p>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capitalize = (word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n  return ( \r\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`}role=\"alert\">\r\n            <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n        </div>\r\n    \r\n  )\r\n}\r\n\r\nexport default Alert\r\n","import './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\n// import About from './components/About';\nimport React, { useState } from 'react';\nimport Alert from './components/Alert';\n// import {BrowserRouter ,Route, Routes} from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState(`light`);\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type)=>{\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  }\n  const toggleMode = ()=>{\n    if(mode === 'light'){\n      setMode('dark');\n      document.body.style.backgroundColor = '#042743';\n      showAlert(\"Dark mode has been enabled\", \"success\");\n      document.title = 'TextUtils - Dark Mode';\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enabled\", \"success\");\n      document.title = 'TextUtils - Light Mode';\n\n    }\n  }\n  return (\n    <React.Fragment>\n    {/* <BrowserRouter> */}\n        <Navbar title=\"TextUtils \" aboutText=\"TextAbouts\" mode={mode} toggleMode={toggleMode} />\n        <Alert alert={alert} />\n        <div className=\"container my-4\" mode={mode}>\n          {/* <Routes> */}\n            {/* <Route path=\"/about\" element={<About/>} />\n            <Route path=\"/\" element={  */}\n              <TextForm heading=\"Enter Text to analyze below\" mode={mode} showAlert={showAlert} />\n          {/* </Routes> */}\n        </div>\n    {/* </BrowserRouter> */}\n    \n    {/* <About/> */}\n    \n    </React.Fragment>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}